const sqlite3 = require('sqlite3').verbose();
const fs = require('fs');
const path = require('path');

// 1. –ü—É—Ç–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–∞–ø–æ–∫
const dbDir = path.join(__dirname);
const dbPath = path.join(dbDir, 'delivery.db'); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
const migrationsDir = path.join(__dirname, '../migrations');

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º/—Å–æ–∑–¥–∞—ë–º –ø–∞–ø–∫–∏
if (!fs.existsSync(dbDir)) fs.mkdirSync(dbDir, { recursive: true });
if (!fs.existsSync(migrationsDir)) {
  console.error('‚ùå –ü–∞–ø–∫–∞ migrations –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
  process.exit(1);
}

// 3. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
const db = new sqlite3.Database(dbPath, sqlite3.OPEN_READWRITE | sqlite3.OPEN_CREATE, (err) => {
  if (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', err.message);
    return;
  }
  console.log('‚úÖ –ë–î –ø–æ–¥–∫–ª—é—á–µ–Ω–∞:', dbPath);

  // 4. –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
  applyMigrations(db);
});

function applyMigrations(db) {
  console.log('üîç –ò—â–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏...');
  
  fs.readdir(migrationsDir, (err, files) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ø–∞–ø–∫–∏ migrations:', err);
      db.close();
      return;
    }

    const sqlFiles = files
      .filter(file => file.endsWith('.sql'))
      .sort()
      .map(file => path.join(migrationsDir, file));

    if (sqlFiles.length === 0) {
      console.error('‚ùå –ù–µ—Ç .sql —Ñ–∞–π–ª–æ–≤ –≤ /migrations!');
      db.close();
      return;
    }

    console.log('üìã –ú–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:', sqlFiles);

    // 5. –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    let currentIndex = 0;
    
    const runNextMigration = () => {
      if (currentIndex >= sqlFiles.length) {
        console.log('‚ú® –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!');
        db.close();
        return;
      }

      const filePath = sqlFiles[currentIndex];
      const sql = fs.readFileSync(filePath, 'utf8');

      console.log(`üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º ${path.basename(filePath)}...`);
      
      db.exec(sql, (err) => {
        if (err) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ ${path.basename(filePath)}:`, err.message);
          db.close();
          process.exit(1);
        }

        console.log(`‚úÖ ${path.basename(filePath)} —É—Å–ø–µ—à–Ω–æ!`);
        currentIndex++;
        runNextMigration();
      });
    };

    runNextMigration();
  });
}